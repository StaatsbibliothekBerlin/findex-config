/**
 * Custom script to get latitude and longitude coordinates.
 * Records can have multiple coordinates sets
 * of points and/or rectangles.
 * Points are represented by coordinate sets where N=S E=W.
 *
 * code adapted from xrosecky - Moravian Library
 * https://github.com/moravianlibrary/VuFind-2.x/blob/master/import/index_scripts/geo.bsh
 * and incorporates VuFind location.bsh functionality for GoogleMap display.
 *
 */

import org.solrmarc.tools.Utils;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.marc4j.marc.*;

org.solrmarc.index.SolrIndexer indexer = null;

private static final Pattern ILN_PATTERN = Pattern.compile("^GBV_ILN_(\\d{1,})");


/**
 * Get collections the record belongs to
 *
 * @param  Record    record
 * @return Set       collections
 */
public Set getCollections(Record record) {
    Set result = new LinkedHashSet();
    Set ilns = new LinkedHashSet();
    String mapName = indexer.loadTranslationMap("collections.properties");
    Set values = indexer.getFieldList(record, "912a");
    for (String collcode : values) {
        String collection = Utils.remap(collcode, indexer.findMap(mapName), true);
        if (collection != null) {
            result.add(collection);
        } else {
            Matcher ILNmatcher = ILN_PATTERN.matcher(collcode);
            if (ILNmatcher.matches()) {
                ilns.add(Integer.parseInt(ILNmatcher.group(1)));
//            } else {
//                if (collcode.startsWith("GBV_") && !collcode.startsWith("GBV_ILN_")) {
//                    result.add(collcode);
//                } 
            }
        }
    }
    if (result.contains("KXP")) {
        for (int iln : ilns) {
            if (iln < 2000) {
                result.add("GVK");
            } else if (iln < 4000) {
                result.add("SWB");
            }
        }
    }
    if (result.isEmpty()) {
        result.add("GVK");
    }
    return result;
}

public Set getCollectionDetails(Record record)
{
    Set result = new LinkedHashSet();
    result.addAll(indexer.getFieldList(record, "912a"));
    Set f935 = indexer.getFieldList(record, "935a");
    for (String coll : f935) {
        result.add("BIBCOLL_" + coll.trim());
    }
    return result;
}
